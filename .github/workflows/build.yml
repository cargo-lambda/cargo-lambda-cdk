name: build
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      self_mutation_happened: ${{ steps.self_mutation.outputs.self_mutation_happened }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Zig toolchain
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.13.0
      - name: Install Cargo Lambda
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: cargo-lambda/cargo-lambda
          tag: v1.5.0
          platform: linux
          arch: x86_64
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.x'
      - uses: actions/setup-go@v4
        with:
          go-version: '1.x'
      - uses: actions/setup-java@v4
        with:
          java-version: '17.x'
          distribution: 'temurin'
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12.3
      - name: Install dependencies
        run: npx projen install:ci
      - name: build
        run: npx projen build --verbose
      - name: Backup artifact permissions
        run: cd dist && getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: |
            .
            !dist
            !**/target
            !examples
          include-hidden-files: true

  package-js:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    if: "! needs.build.outputs.self_mutation_happened"
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .repo
      - name: Restore build artifact permissions
        run: cd .repo && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Install Dependencies
        run: cd .repo && npx projen install:ci
      - name: Create js artifact
        run: cd .repo && npx projen package:js
      - name: Collect js Artifact
        run: mv .repo/dist dist
  package-java:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    if: "! needs.build.outputs.self_mutation_happened"
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17.x'
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .repo
      - name: Restore build artifact permissions
        run: cd .repo && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Install Dependencies
        run: cd .repo && npx projen install:ci
      - name: Create java artifact
        run: cd .repo && npx projen package:java
      - name: Collect java Artifact
        run: mv .repo/dist dist
  package-python:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    if: "! needs.build.outputs.self_mutation_happened"
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12.3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .repo
      - name: Restore build artifact permissions
        run: cd .repo && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Install Dependencies
        run: cd .repo && npx projen install:ci
      - name: Create python artifact
        run: cd .repo && npx projen package:python
      - name: Collect python Artifact
        run: mv .repo/dist dist
  package-dotnet:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    if: "! needs.build.outputs.self_mutation_happened"
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 3.x
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .repo
      - name: Restore build artifact permissions
        run: cd .repo && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Install Dependencies
        run: cd .repo && npx projen install:ci
      - name: Create dotnet artifact
        run: cd .repo && npx projen package:dotnet
      - name: Collect dotnet Artifact
        run: mv .repo/dist dist
  package-go:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    if: "! needs.build.outputs.self_mutation_happened"
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/setup-go@v4
        with:
          go-version: ^1.16.0
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .repo
      - name: Restore build artifact permissions
        run: cd .repo && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Install Dependencies
        run: cd .repo && npx projen install:ci
      - name: Create go artifact
        run: cd .repo && npx projen package:go
      - name: Collect go Artifact
        run: mv .repo/dist dist
